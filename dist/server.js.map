{"version":3,"file":"server.js","mappings":"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","sources":["webpack://yoteam/./src/server/TeamsAppsComponents.ts?6a42","webpack://yoteam/./src/server/yoteamMessageExtensionBot/YoteamMessageExtensionBot.ts?b38b","webpack://yoteam/./src/server/yoteamMessageExtension/YoteamMessageExtension.ts?3920","webpack://yoteam/external commonjs \"botbuilder\"?9bd5","webpack://yoteam/external commonjs \"botbuilder-dialogs\"?0e7e","webpack://yoteam/external commonjs \"compression\"?e0c2","webpack://yoteam/external commonjs \"dotenv\"?3fba","webpack://yoteam/external commonjs \"express\"?c4a6","webpack://yoteam/external commonjs \"express-msteams-host\"?eac2","webpack://yoteam/external commonjs \"morgan\"?66c0","webpack://yoteam/external node-commonjs \"http\"?78d4","webpack://yoteam/external node-commonjs \"path\"?1f34","[]","webpack://yoteam/./src/server/server.ts?3175"],"sourcesContent":["// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the yoteamMessageExtensionBot bot\nexport * from \"./yoteamMessageExtensionBot/YoteamMessageExtensionBot\";\n","import { BotDeclaration, MessageExtensionDeclaration } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport { TeamsActivityHandler, StatePropertyAccessor, ActivityTypes, CardFactory, ConversationState, MemoryStorage, TurnContext } from \"botbuilder\";\n\nimport WelcomeCard from \"./cards/welcomeCard\";\nimport YoteamMessageExtension from \"../yoteamMessageExtension/YoteamMessageExtension\";\nimport { DialogSet, DialogState } from \"botbuilder-dialogs\";\n// Initialize debug logging module\n// const log = debug(\"msteams\");\n\n/**\n * Implementation for yoteam Message Extension Bot\n */\n@BotDeclaration(\n    \"/api/messages\",\n    new MemoryStorage(),\n    // eslint-disable-next-line no-undef\n    process.env.MICROSOFT_APP_ID,\n    // eslint-disable-next-line no-undef\n    process.env.MICROSOFT_APP_PASSWORD)\n\nexport class YoteamMessageExtensionBot extends TeamsActivityHandler {\n\n    private readonly conversationState: ConversationState;\n    /** Local property for YoteamMessageExtension */\n    @MessageExtensionDeclaration(\"yoteamMessageExtension\")\n    private _yoteamMessageExtension: YoteamMessageExtension;\n\n    private readonly dialogs: DialogSet;\n    private dialogState: StatePropertyAccessor<DialogState>;\n\n    /**\n     * The constructor\n     * @param conversationState\n     */\n    public constructor(conversationState: ConversationState) {\n        super();\n        // Message extension YoteamMessageExtension\n        this._yoteamMessageExtension = new YoteamMessageExtension();\n\n        this.conversationState = conversationState;\n        this.dialogState = conversationState.createProperty(\"dialogState\");\n        this.dialogs = new DialogSet(this.dialogState);\n        // Set up the Activity processing\n        this.onMessage(async (context: TurnContext): Promise<void> => {\n            // TODO: add your own bot logic in here\n            switch (context.activity.type) {\n                case ActivityTypes.Message:\n                    {\n                        let text = TurnContext.removeRecipientMention(context.activity);\n                        text = text.toLowerCase();\n                        if (text.startsWith(\"hello\")) {\n                            await context.sendActivity(\"Oh, hello to you as well!\");\n                            return;\n                        } else if (text.startsWith(\"help\")) {\n                            await context.sendActivity(\"Please refer to [this link](https://docs.microsoft.com/en-us/microsoftteams/platform/bots/what-are-bots) to see how to develop bots for Teams\");\n                        } else {\n                            await context.sendActivity(\"I'm terribly sorry, but my developer hasn't trained me to do anything yet...\");\n                        }\n                    }\n                    break;\n                default:\n                    break;\n            }\n            // Save state changes\n            return this.conversationState.saveChanges(context);\n        });\n    }\n}\n","import * as debug from \"debug\";\nimport { PreventIframe } from \"express-msteams-host\";\nimport { TurnContext, CardFactory, MessagingExtensionQuery, MessagingExtensionResult, TaskModuleRequest, TaskModuleContinueResponse } from \"botbuilder\";\nimport { IMessagingExtensionMiddlewareProcessor } from \"botbuilder-teams-messagingextensions\";\n\n// Initialize debug logging module\n// const log = debug(\"msteams\");\n\n@PreventIframe(\"/yoteamMessageExtension/config.html\")\n@PreventIframe(\"/yoteamMessageExtension/action.html\")\nexport default class YoteamMessageExtension implements IMessagingExtensionMiddlewareProcessor {\n\n    public async onFetchTask(context: TurnContext, value: MessagingExtensionQuery): Promise<MessagingExtensionResult | TaskModuleContinueResponse> {\n        return Promise.resolve<TaskModuleContinueResponse>({\n            type: \"continue\",\n            value: {\n                url: `https://${process.env.PUBLIC_HOSTNAME}/yoteamMessageExtension/action.html?name={loginHint}&tenant={tid}&group={groupId}&theme={theme}`,\n                height: \"large\"\n            }\n        });\n\n    }\n\n    // handle action response in here\n    // See documentation for `MessagingExtensionResult` for details\n    public async onSubmitAction(context: TurnContext, value: TaskModuleRequest): Promise<MessagingExtensionResult> {\n        console.log(value);\n        return Promise.resolve({\n            type: \"message\",\n            text: \"\"\n        });\n    }\n\n    // this is used when canUpdateConfiguration is set to true\n    public async onQuerySettingsUrl(context: TurnContext): Promise<{ title: string, value: string }> {\n        return Promise.resolve({\n            title: \"yoteam Message Extension Configuration\",\n            value: `https://${process.env.PUBLIC_HOSTNAME}/yoteamMessageExtension/config.html?name={loginHint}&tenant={tid}&group={groupId}&theme={theme}`\n        });\n    }\n\n    public async onSettings(context: TurnContext): Promise<void> {\n        // take care of the setting returned from the dialog, with the value stored in state\n        const setting = context.activity.value.state;\n        // log(`New setting: ${setting}`);\n        return Promise.resolve();\n    }\n\n}\n","module.exports = require(\"botbuilder\");","module.exports = require(\"botbuilder-dialogs\");","module.exports = require(\"compression\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\n\n// Initialize debug logging module\n// const log = debug(\"msteams\");\n\n// log(\"Initializing Microsoft Teams Express hosted App...\");\n\n// Initialize dotenv, to use .env file settings if existing\nrequire(\"dotenv\").config();\n\n// The import of components has to be done AFTER the dotenv config\n// eslint-disable-next-line import/first\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    // log(`Server running on ${port}`);\n});\n"],"names":["nonce","YoteamMessageExtensionBot","TeamsActivityHandler","conversationState","super","this","_yoteamMessageExtension","dialogState","createProperty","dialogs","DialogSet","onMessage","context","activity","type","ActivityTypes","Message","text","TurnContext","removeRecipientMention","toLowerCase","startsWith","sendActivity","saveChanges","MessageExtensionDeclaration","BotDeclaration","MemoryStorage","process","env","MICROSOFT_APP_ID","MICROSOFT_APP_PASSWORD","YoteamMessageExtension","onFetchTask","value","Promise","resolve","url","PUBLIC_HOSTNAME","height","onSubmitAction","console","log","onQuerySettingsUrl","title","onSettings","state","PreventIframe","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","express","Express","port","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen"],"sourceRoot":""}